PASSED src/modules/accounts/accounts.controller.spec.ts
  AccountsController
    ✓ controller should be defined
    ✓ accountsService should be defined
    register()
      with accountsService#register() that returns undefined
        ✓ should forward call to accountsService#register() and return nothing
      with accountsService#register() that returns null
        ✓ should forward call to accountsService#register() and return nothing
      with accountsService#register() that returns some string
        ✓ should forward call to accountsService#register() and return nothing
      with accountsService#register() that returns { someKey: 'some value' }
        ✓ should forward call to accountsService#register() and return nothing
      with accountsService#register() that throws error
        ✓ should forward call to accountsService#register() and forward error
    login()
      with accountsService#login() that returns undefined
        ✓ should forward call to accountsService#login() and forward return value
      with accountsService#login() that returns null
        ✓ should forward call to accountsService#login() and forward return value
      with accountsService#login() that returns some string
        ✓ should forward call to accountsService#login() and forward return value
      with accountsService#login() that returns { someKey: 'some value' }
        ✓ should forward call to accountsService#login() and forward return value
      with accountsService#login() that throws error (random Error)
        ✓ should forward call to accountsService#login() and throw database 500 error
      with accountsService#login() that throws error (401 UnauthorizedException)
        ✓ should forward call to accountsService#login() and forward unauthorized 401 error
    getProfile()
      ✓ TODO
      ✓ should return user object attached to request by AuthGuard
PASSED src/modules/accounts/accounts.service.spec.ts
  AccountsService
    ✓ service should be defiend
    ✓ databaseService should be defiend
    ✓ jwtService should be defined
    register()
      with bcrypt#hash() that throws error
        ✓ should call bcrypt#hash() and forward error
      with databaseService#create() that returns null
        ✓ should hash password, call databaseService#create(), and return nothing
      with databaseService#create() that returns undefined
        ✓ should hash password, call databaseService#create(), and return nothing
      with databaseService#create() that returns some string value
        ✓ should hash password, call databaseService#create(), and return nothing
      with databaseService#create() that returns { someKey: 'some value' }
        ✓ should hash password, call databaseService#create(), and return nothing
      with databaseService#create() that throws error
        ✓ should hash password, call databaseService#create(), and forward error
    login()
      with databaseService#findOne() that returns an account with matching password hash
        ✓ should call databaseService#findOne() with username, call bcrypt#compare() and return retrived access token from jwtService#signAsync()
      with databaseService#findOne() that returns an account with different password hash
        ✓ should call databaseService#findOne() with username, call bcrypt#compare() and throw UnauthorizedException
      with databaseService#findOne() that returns an account and bcrypt#compare() that throws error
        ✓ should call databaseService#findOne() with username, call bcrypt#compare() and forward error
      with databaseService#findOne() that returns null
        ✓ should call databaseService#findOne() with username and throw UnauthorizedException
      with databaseService#findOne() that throws error
        ✓ should call databaseService#findOne() with password and forward error
PASSED src/modules/accounts/guards/auth.guard.spec.ts
  AuthGuard
    ✓ guard should be defined
    ✓ mocks should be defined
    canActivate()
      for request with valid Authorization header
        with JwtService#varifyAsync() that passes
          ✓ should extract token from HTTP request, fetch JWT secret from env, verify token with JwtService#verifyAsync(), assign token payload to request["user"] and return true
        with JwtService#verifyAsync() that fails
          ✓ should extract token from HTTP request, fetch JWT secret from env, verify token with JwtService#verifyAsync() and throw UnauthorizedException
      for request with invalid Authorization header - not "Bearer"
        ✓ should extract token from HTTP request and throw UnauthorizedException
      for request with invalid Authorization header - missing token
        ✓ should extract token from HTTP request and throw UnauthorizedException
      for request with invalid Authorization header - missing "Bearer"
        ✓ should extract token from HTTP request and throw UnauthorizedException
      for request with invalid Authorization header - empty string
        ✓ should extract token from HTTP request and throw UnauthorizedException
      for request with no Authorization header
        ✓ should extract token from HTTP request and throw UnauthorizedException
PASSED src/modules/accounts/modules/database/database.service.spec.ts
  AccountsDatabaseService
    ✓ service should be defined
    ✓ dataSource should be defined
    create()
      with database that is empty
        with database available
          for correct username and password
            ✓ should store new account in database and return nothing
          for username that is an empty string
            ✓ should not alter database and throw descriptive error
          for password that is an empty string
            ✓ should not alter database and throw descriptive error
          for username and password both being empty string
            ✓ should not alter database and throw descriptive error
        with database not available
          for correct username and password
            ✓ should not alter database and throw descriptive error
          for username that is an empty string
            ✓ should not alter database and throw descriptive error
          for password that is an empty string
            ✓ should not alter database and throw descriptive error
          for username and password both being empty string
            ✓ should not alter database and throw descriptive error
      with database that already stores account
        with database available
          for correct username and password
            ✓ should store new account in database and return nothing
          for correct password but username is already taken
            ✓ should not alter database and throw descriptive error
          for username that is an empty string
            ✓ should not alter database and throw descriptive error
          for password that is an empty string
            ✓ should not alter database and throw descriptive error
          for username and password both being empty string
            ✓ should not alter database and throw descriptive error
        with database not available
          for correct username and password
            ✓ should not alter database and throw descriptive error
          for correct password but username is already taken
            ✓ should not alter database and throw descriptive error
          for username that is an empty string
            ✓ should not alter database and throw descriptive error
          for password that is an empty string
            ✓ should not alter database and throw descriptive error
          for username and password both being empty string
            ✓ should not alter database and throw descriptive error
    findOne()
      with database that is empty
        with database available
          for unknown username
            ✓ should not alter database and return null
          for username being empty string
            ✓ should not alter database and throw descriptive error
        with database not available
          for unknown username
            ✓ should not alter database and throw descriptive error
          for username being empty string
            ✓ should not alter database and throw descriptive error
      with database that already stores accounts
        with database available
          for known username - first-user
            ✓ should not alter database and return matching account
          for known username - second-user
            ✓ should not alter database and return matching account
          for unknown username
            ✓ should not alter database and return null
          for username being empty string
            ✓ should not alter database and throw descriptive error
        with database not available
          for known username - first-user
            ✓ should not alter database and throw descriptive error
          for known username - second-user
            ✓ should not alter database and throw descriptive error
          for unknown username
            ✓ should not alter database and throw descriptive error
          for username being empty string
            ✓ should not alter database and throw descriptive error
PASSED src/modules/documents/documents.controller.spec.ts
  DocumentsController
    ✓ should be defined
    ✓ documentsService should be defined
    create()
      ✓ should call documentsService#create() with received data and forward result
    findAll()
      ✓ should call documentsService#findAll() with received data and forward result
    findOne()
      for correct document id
        ✓ should call documentsService#findOne() with received data, set header accordingly to returned document and return StreamableFile 
      for unknown document id
        ✓ should call documentsService#findOne() with received data and for null response throw NotFoundException (404)
    remove()
      ✓ should call documentsService#remove() with received data and forward result
PASSED src/modules/documents/documents.service.spec.ts
  DocumentsService
    ✓ service should be defined
    ✓ service should use database/documents as storagePath
    ✓ dataSource should be defined
    create()
      with database that is empty
        with database available
          for correct arguments
            ✓ should store new document in database and return nothing
          for incorrect name - 
            ✓ should not alter database and throw error with correct message
          for incorrect keys - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 0
            ✓ should not alter database and throw error with correct message
          for incorrect userId - -1
            ✓ should not alter database and throw error with correct message
          for incorrect userId - some string
            ✓ should not alter database and throw error with correct message
        with database not available
          for correct arguments
            ✓ should not alter database and throw error with correct message
          for incorrect name - 
            ✓ should not alter database and throw error with correct message
          for incorrect keys - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 0
            ✓ should not alter database and throw error with correct message
          for incorrect userId - -1
            ✓ should not alter database and throw error with correct message
          for incorrect userId - some string
            ✓ should not alter database and throw error with correct message
      with database that already stores document
        with database available
          for correct arguments
            ✓ should store new document in database and return nothing
          for correct arguments - same file under different name (name differs only in case) - same user
            ✓ should store document again in database, not reuse it, and return nothing
          for correct arguments - same file under different name (name differs only in case) - different user
            ✓ should store document again in database, not reuse it, and return nothing
          for correct arguments - already taken name - different user
            ✓ should store new document in database and return nothing
          for incorrect arguments - already taken name - same user
            ✓ should not alter database and throw error with correct message
          for incorrect name - 
            ✓ should not alter database and throw error with correct message
          for incorrect keys - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 0
            ✓ should not alter database and throw error with correct message
          for incorrect userId - -1
            ✓ should not alter database and throw error with correct message
          for incorrect userId - some string
            ✓ should not alter database and throw error with correct message
        with database not available
          for correct arguments
            ✓ should not alter database and throw error with correct message
          for correct arguments - same file under different name (name differs only in case) - same user
            ✓ should not alter database and throw error with correct message
          for correct arguments - same file under different name (name differs only in case) - different user
            ✓ should not alter database and throw error with correct message
          for correct arguments - already taken name - different user
            ✓ should not alter database and throw error with correct message
          for incorrect arguments - already taken name - same user
            ✓ should not alter database and throw error with correct message
          for incorrect name - 
            ✓ should not alter database and throw error with correct message
          for incorrect keys - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 
            ✓ should not alter database and throw error with correct message
          for incorrect userId - 0
            ✓ should not alter database and throw error with correct message
          for incorrect userId - -1
            ✓ should not alter database and throw error with correct message
          for incorrect userId - some string
            ✓ should not alter database and throw error with correct message
    findAll()
      with database that is empty
        with database available
          for unknown userId - 2
            ✓ should not alter database and return empty list
        with database not available
          for unknown userId - 2
            ✓ should not alter database and throw error with correct message
      with database that already stores three documents
        with database available
          for unknown userId - 2
            ✓ should not alter database and return empty list
          for known userId - 1 (first user)
            ✓ should not alter database and return a list of stored documents belonging to this user
          for known userId - 3 (second user)
            ✓ should not alter database and return a list of stored documents belonging to this user
        with database not available
          for unknown userId - 2
            ✓ should not alter database and throw error with correct message
          for known userId - 1 (first user)
            ✓ should not alter database and throw error with correct message
          for known userId - 3 (second user)
            ✓ should not alter database and throw error with correct message
    findOne()
      with database that is empty
        with database available
          for unknown userId - 2, and unknown document id - 3
            ✓ should not alter database and return null
        with database not available
          for unknown userId - 2, and unknown document id - 3
            ✓ should not alter database and throw error with correct message
      with database that already stores two documents
        with database available
          for unknown userId - 2, and unknown document id - 3
            ✓ should not alter database and return null
          for known userId - 1, and known document id - 1 (his document)
            ✓ should not alter database and return selected document
          for known userId - 3, and known document id - 2 (his document)
            ✓ should not alter database and return selected document
          for known userId - 1, and known document id - 2 (not his document)
            ✓ should not alter database and return null
          for known userId - 3, and known document id - 1 (not his document)
            ✓ should not alter database and return null
          for known userId - 1, and unknown document id - 3
            ✓ should not alter database and return null
          for known userId - 1, and unknown document id - 1.001
            ✓ should not alter database and return null
          for known userId - 3, and unknown document id - 3
            ✓ should not alter database and return null
          for unknown userId - 2, and known document id - 1
            ✓ should not alter database and return null
          for unknown userId - 2, and known document id - 2
            ✓ should not alter database and return null
        with database not available
          for unknown userId - 2, and unknown document id - 3
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and known document id - 1 (his document)
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and known document id - 2 (his document)
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and known document id - 2 (not his document)
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and known document id - 1 (not his document)
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and unknown document id - 3
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and unknown document id - 1.001
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and unknown document id - 3
            ✓ should not alter database and throw error with correct message
          for unknown userId - 2, and known document id - 1
            ✓ should not alter database and throw error with correct message
          for unknown userId - 2, and known document id - 2
            ✓ should not alter database and throw error with correct message
    remove()
      with database that is empty
        with database available
          for unknown userId - 2, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
        with database not available
          for unknown userId - 2, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
      with database that already stores three documents
        with database available
          for known userId - 1, and his document id - 1
            ✓ should remove selected document from database and return nothing
          for known userId - 1, and his document id - 3
            ✓ should remove selected document from database and return nothing
          for known userId - 1, and not his document id - 2
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and unknown document id - 1.001
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and his document id - 2
            ✓ should remove selected document from database and return nothing
          for known userId - 3, and not his document id - 1
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and not his document id - 3
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
          for unknown userId - 2, and not his document id - 1
            ✓ should not alter database and throw error with correct message
          for unknown userId - 2, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
        with database not available
          for known userId - 1, and his document id - 1
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and his document id - 3
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and not his document id - 2
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and unknown document id - 1.001
            ✓ should not alter database and throw error with correct message
          for known userId - 1, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and his document id - 2
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and not his document id - 1
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and not his document id - 3
            ✓ should not alter database and throw error with correct message
          for known userId - 3, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
          for unknown userId - 2, and not his document id - 1
            ✓ should not alter database and throw error with correct message
          for unknown userId - 2, and unknown document id - 4
            ✓ should not alter database and throw error with correct message
FAILED test/accounts.e2e-spec.ts
  AccountsController (e2e)
    ✓ dataSource should be defined
    /accounts
      /register
        / (POST)
          with database that is empty
            with database available
              for request with correct username and password
                ✓ should 201, create new account and return nothing
              for request with additional unknown field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `usename`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `passwrod`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing both `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
            with database not available
              for request with correct username and password
                ✓ should 500, not alter database and return message that explains error cause
              for request with additional unknown field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `usename`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `passwrod`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing both `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
          with database that already stores an account
            with database available
              for request with correct username and password
                ✓ should 201, create new account and return nothing
              for request with correct password and already taken username
                ✓ should 409, not alter database and return message that explains error cause
              for request with correct password and already taken username but different case
                ✓ should 201, create new account and return nothing
              for request with additional unknown field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `usename`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `passwrod`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing both `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
            with database not available
              for request with correct username and password
                ✓ should 500, not alter database and return message that explains error cause
              for request with correct password and already taken username
                ✓ should 500, not alter database and return message that explains error cause
              for request with additional unknown field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` instead of `usename`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` instead of `passwrod`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for reqeust with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing both `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
      /login
        / (POST)
          with database that is empty
            with database available
              for request with incorrect credentials
                ✓ should 401, not alter database and return message that explains error cause
              for request with `username` replaced by `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `usernme`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `passwrd`
                ✓ should 400, not alter database and return message that explains error cause
              for request with extra field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` and `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
            with database not available
              for request with incorrect credentials
                ✓ should 500, not alter database and return message that explains error cause
              for request with `username` replaced by `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `usernme`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `passwrd`
                ✓ should 400, not alter database and return message that explains error cause
              for request with extra field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` and `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
          with database that already stores two accounts
            with database available
              for request with correct credentials - first account
                ✓ should 201, not alter database and return access token
              for request with correct credentials - second account
                ✓ should 201, not alter database and return access token
              for two requests with correct credentials - same account twice - no wait
                x should 201, not alter database and return access token (twice, same tokens)
              for two requests with correct credentials - same account twice - wait 1 sec
                ✓ should 201, not alter database and return access token (twice, different tokens)
              for two requests with correct credentials - different accounts - no wait
                ✓ should 201, not alter database and return access token (twice, different tokens)
              for two requests with correct credentials - different accounts - wait 1 sec
                ✓ should 201, not alter database and return access token (twice, different tokens)
              for request with correct `username` and incorrect `password`
                ✓ should 401, not alter database and return message that explains error cause
              for request with correct `password` and incorrect `username`
                ✓ should 401, not alter database and return message that explains error cause
              for request with incorrect credentials
                ✓ should 401, not alter database and return message that explains error cause
              for request with `username` replaced by `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `usernme`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `passwrd`
                ✓ should 400, not alter database and return message that explains error cause
              for request with extra field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` and `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
            with database not available
              for request with correct credentials - first account
                ✓ should 500, not alter database and return message that explains error cause
              for request with correct credentials - second account
                ✓ should 500, not alter database and return message that explains error cause
              for request with incorrect credentials
                ✓ should 500, not alter database and return message that explains error cause
              for request with `username` replaced by `Username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `USERNAME`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` replaced by `usernme`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `Password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `PASSWORD`
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` replaced by `passwrd`
                ✓ should 400, not alter database and return message that explains error cause
              for request with extra field
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with `username` and `password` set to empty string
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `password`
                ✓ should 400, not alter database and return message that explains error cause
              for request with missing `username` and `password`
                ✓ should 400, not alter database and return message that explains error cause
      / (GET)
        with database that is empty
          with database available
            for request with invalid token - incorrect value
              ✓ should 401, not alter database and return message that explains error cause
            for request with invalid token - empty string
              ✓ should 401, not alter database and return message that explains error cause
            for request with no token
              ✓ should 401, not alter database and return message that explains error cause
          with database not available
            for request with invalid token - incorrect value
              ✓ should 401, not alter database and return message that explains error cause
            for request with invalid token - empty string
              ✓ should 401, not alter database and return message that explains error cause
            for request with no token
              ✓ should 401, not alter database and return message that explains error cause
        with database that already stores two accounts
          with database available
            for request with valid token - first account
              ✓ should 200, not alter database and return selected account token info
            for request with valid token - second account
              ✓ should 200, not alter database and return selected account token info
            for request with invalid token - incorrect value
              ✓ should 401, not alter database and return message that explains error cause
            for request with invalid token - empty string
              ✓ should 401, not alter database and return message that explains error cause
            for request with no token
              ✓ should 401, not alter database and return message that explains error cause
          with database not available
            for request with valid token - first account
              ✓ should 200, not alter database and return selected account token info
            for request with valid token - second account
              ✓ should 200, not alter database and return selected account token info
            for request with invalid token - incorrect value
              ✓ should 401, not alter database and return message that explains error cause
            for request with invalid token - empty string
              ✓ should 401, not alter database and return message that explains error cause
            for request with no token
              ✓ should 401, not alter database and return message that explains error cause
PASSED test/documents.e2e-spec.ts
  DocumentsController (e2e)
    ✓ dataSource should be defined
    /documents
      POST /
        with database that stores 1 account and 0 documents
          with database available
            should 201, store document in database and return nothing
              ✓ for request that is correct
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with "name" field mispelled as "Name"
              ✓ for request with "name" field mispelled as "NAME"
              ✓ for request with "name" field missing
              ✓ for request with "name" field value empty
              ✓ for request with "keys" field mispelled as "Keys"
              ✓ for request with "keys" field mispelled as "KEYS"
              ✓ for request with "keys" field missing
              ✓ for request with "keys" field value empty
              ✓ for request with "file" field mispelled as "File"
              ✓ for request with "file" field mispelled as "FILE"
              ✓ for request with "file" field missing (no file attached/uploading)
              ✓ for request with "file" field uploading empty file
              ✓ for request with "file" field that is not a file
              ✓ for request with additional unknown field `Field`
              ✓ for request with additional unknown field `key`
              ✓ for request with additional unknown field `type`
              ✓ for request with additional unknown field ` `
              ✓ for request with Content-Type application/json and "file" field
            should 415, not alter database and return message that explains error cause
              ✓ for request with Content-Type application/json and no "file" field
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request that is correct
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with "name" field mispelled as "Name"
              ✓ for request with "name" field mispelled as "NAME"
              ✓ for request with "name" field missing
              ✓ for request with "name" field value empty
              ✓ for request with "keys" field mispelled as "Keys"
              ✓ for request with "keys" field mispelled as "KEYS"
              ✓ for request with "keys" field missing
              ✓ for request with "keys" field value empty
              ✓ for request with "file" field mispelled as "File"
              ✓ for request with "file" field mispelled as "FILE"
              ✓ for request with "file" field missing (no file attached/uploading)
              ✓ for request with "file" field uploading empty file
              ✓ for request with "file" field that is not a file
              ✓ for request with additional unknown field `Field`
              ✓ for request with additional unknown field `key`
              ✓ for request with additional unknown field `type`
              ✓ for request with additional unknown field ` `
              ✓ for request with Content-Type application/json and "file" field
            should 415, not alter database and return message that explains error cause
              ✓ for request with Content-Type application/json and no "file" field
        with database that stores 1 account and 1 document
          with database available
            should 201, store document in database and return nothing
              ✓ for request that is correct
              ✓ for request that is correct - same file, keys and user again
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with "name" field mispelled as "Name"
              ✓ for request with "name" field mispelled as "NAME"
              ✓ for request with "name" field missing
              ✓ for request with "name" field value empty
              ✓ for request with "keys" field mispelled as "Keys"
              ✓ for request with "keys" field mispelled as "KEYS"
              ✓ for request with "keys" field missing
              ✓ for request with "keys" field value empty
              ✓ for request with "file" field mispelled as "File"
              ✓ for request with "file" field mispelled as "FILE"
              ✓ for request with "file" field missing (no file attached/uploading)
              ✓ for request with "file" field uploading empty file
              ✓ for request with "file" field that is not a file
              ✓ for request with additional unknown field `Field`
              ✓ for request with additional unknown field `key`
              ✓ for request with additional unknown field `type`
              ✓ for request with additional unknown field ` `
              ✓ for request with Content-Type application/json and "file" field
            should 415, not alter database and return message that explains error cause
              ✓ for request with Content-Type application/json and no "file" field
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request that is correct
              ✓ for request that is correct - same file, keys and user again
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with "name" field mispelled as "Name"
              ✓ for request with "name" field mispelled as "NAME"
              ✓ for request with "name" field missing
              ✓ for request with "name" field value empty
              ✓ for request with "keys" field mispelled as "Keys"
              ✓ for request with "keys" field mispelled as "KEYS"
              ✓ for request with "keys" field missing
              ✓ for request with "keys" field value empty
              ✓ for request with "file" field mispelled as "File"
              ✓ for request with "file" field mispelled as "FILE"
              ✓ for request with "file" field missing (no file attached/uploading)
              ✓ for request with "file" field uploading empty file
              ✓ for request with "file" field that is not a file
              ✓ for request with additional unknown field `Field`
              ✓ for request with additional unknown field `key`
              ✓ for request with additional unknown field `type`
              ✓ for request with additional unknown field ` `
              ✓ for request with Content-Type application/json and "file" field
            should 415, not alter database and return message that explains error cause
              ✓ for request with Content-Type application/json and no "file" field
      POST /:id
        with database that is empty
          with database available
            should 404, not alter database and return message that explains error cause 
              ✓ for request that is correct
      GET /
        with database that stores 2 accounts and 0 documents
          with database available
            should 200, not alter database and return list of documents
              ✓ for request that is correct - first account
              ✓ for request that is correct - second account
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request that is correct - first account
              ✓ for request that is correct - second account
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
        with database that stores 2 accounts and 3 documents
          with database available
            should 200, not alter database and return list of documents
              ✓ for request that is correct - first account
              ✓ for request that is correct - second account
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request that is correct - first account
              ✓ for request that is correct - second account
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
      GET /:id
        with database that stores 2 accounts and 0 documents
          with database available
            should 404, not alter database and return message that explains error cause
              ✓ for request with unknown document id - 4
              ✓ for request with negative number document id - -1
              ✓ for request with 0 as document id (we count from 1) - 0
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with string as id - A
              ✓ for request with floating point number as id - 1.0
              ✓ for request with floating point number as id - 1.1
              ✓ for request with floating point number as id - 3.0
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request with unknown document id - 4
              ✓ for request with negative number document id - -1
              ✓ for request with 0 as document id (we count from 1) - 0
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with string as id - A
              ✓ for request with floating point number as id - 1.0
              ✓ for request with floating point number as id - 1.1
              ✓ for request with floating point number as id - 3.0
        with database that stores 2 accounts and 3 documents
          with database available
            should 200, not alter database and download correct document
              ✓ for request that is correct - first document id - 1
              ✓ for request that is correct - first document id technically - 001
              ✓ for request that is correct - second document id - 3
            should 404, not alter database and return message that explains error cause
              ✓ for request with unknown document id - 4
              ✓ for request with negative number document id - -1
              ✓ for request with 0 as document id (we count from 1) - 0
              ✓ for request with document id that does not belong to user
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with string as id - A
              ✓ for request with floating point number as id - 1.0
              ✓ for request with floating point number as id - 1.1
              ✓ for request with floating point number as id - 3.0
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request that is correct - first document id - 1
              ✓ for request that is correct - first document id technically - 001
              ✓ for request that is correct - second document id - 3
              ✓ for request with unknown document id - 4
              ✓ for request with negative number document id - -1
              ✓ for request with 0 as document id (we count from 1) - 0
              ✓ for request with document id that does not belong to user
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
            should 400, not alter database and return message that explains error cause
              ✓ for request with string as id - A
              ✓ for request with floating point number as id - 1.0
              ✓ for request with floating point number as id - 1.1
              ✓ for request with floating point number as id - 3.0
      DELETE /
        with database that is empty
          with database available
            for request that is correct
              ✓ should 404, not alter database and return message that explains error cause
          with database not available
            for request that is correct
              ✓ should 404, not alter database and return message that explains error cause
        with database that already stores two documents
          with database available
            for request that is correct
              ✓ should 404, not alter database and return message that explains error cause
          with database not available
            for request that is correct
              ✓ should 404, not alter database and return message that explains error cause
      DELETE /:id
        with database that stores 2 accounts and 0 documents
          with database available
            should 200, not alter database and return nothing
              ✓ for request with unknown document id - 4
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request with unknown document id - 4
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
        with database that stores 2 accounts and 3 documents
          with database available
            should 200, remove only mentioned document from database and return nothing
              ✓ for request with known document id - 1
              ✓ for request with known document id - 3
            should 200, not alter database and return nothing
              ✓ for request with unknown document id - 4
              ✓ for request with document id that does not belong to user - 2
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header
          with database not available
            should 500, not alter database and return message that explains error cause
              ✓ for request with known document id - 1
              ✓ for request with known document id - 3
              ✓ for request with unknown document id - 4
              ✓ for request with document id that does not belong to user - 2
            should 401, not alter database and return message that explains error cause
              ✓ for request with no authorization header
              ✓ for request with invalid authorization header

Test Suites: 7 passed, 8 total, 1 failed, 0 pending, 0 runtime error
Tests: 481 passed, 482 total, 1 failed, 0 pending, 0 todo
Snapshots: [
  [ false, 'failure' ],
  [ false, 'didUpdate' ],
  [ 0, 'total' ],
  [ 0, 'matched' ],
  [ 0, 'updated' ],
  [ 0, 'added' ],
  [ 0, 'unchecked' ],
  [ 0, 'unmatched' ],
  [ 0, 'filesAdded' ],
  [ 0, 'filesRemoved' ],
  [ 0, 'filesUnmatched' ],
  [ 0, 'filesUpdated' ]
]
Success: false (was interrupted: false )
note: this entire log was generated by script from `jest --json` output
